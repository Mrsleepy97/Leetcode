 int longestSubarray(vector<int>& nums) {
        
         vector<int> psum(nums.size()+2);
        vector<int> ssum(nums.size()+2);

        psum[0] = psum[nums.size()+1] = ssum[0] = ssum[nums.size()+1] = 0;

        int sum = 0;
        for(int i = 1 ; i <= nums.size() ; i ++)
        {
            if(nums[i-1] == 0) sum = 0;
            psum[i] = sum + nums[i-1];
            sum = sum + nums[i-1];
        }
        sum = 0;
        for(int i = nums.size() ; i >0;i--)
        {
            if(nums[i-1] == 0) sum = 0;
            ssum[i] = sum + nums[i-1];
            sum = sum + nums[i-1];   
        }

        int ans = INT_MIN;

        for(int i = 1 ; i <= nums.size(); i ++)
        {

                int temp = psum[i-1] + ssum[i+1];
                ans = max(ans,temp);
            
        }
        
        return ans;
    }
